<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2rayc.github.io/news/article-63738.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Zookeeper——客户端API的相关方法操作</title>
        <meta name="description" content="1.前言 2.实操步骤 2.1 创建zk客户端，完成与服务端的连接 2.2 创建节点信息 2.3 获取子结点并监听节点变化 2.4 判断节点是否存在 3.浅谈写数据原理 3.1 写流程之写入请求直接发" />
        <link rel="icon" href="/assets/website/img/v2rayc/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2rayC免费节点分享中文站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2rayc.github.io/news/article-63738.htm" />
    <meta property="og:site_name" content="V2rayC免费节点分享中文站" />
    <meta property="og:title" content="Zookeeper——客户端API的相关方法操作" />
    <meta property="og:image" content="https://v2rayc.github.io/uploads/20241122/c6a42b2aa92a2d63eaf82188b338cc1d.webp" />
        <meta property="og:release_date" content="2025-02-27T05:55:51" />
    <meta property="og:updated_time" content="2025-02-27T05:55:51" />
        <meta property="og:description" content="1.前言 2.实操步骤 2.1 创建zk客户端，完成与服务端的连接 2.2 创建节点信息 2.3 获取子结点并监听节点变化 2.4 判断节点是否存在 3.浅谈写数据原理 3.1 写流程之写入请求直接发" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Zookeeper——客户端API的相关方法操作">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Jost:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/v2rayc/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayc/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayc/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayc/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayc/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayc/remixicon/remixicon.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayc/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/v2rayc/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-ES4W43FQ84"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-ES4W43FQ84');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top header-inner-pages">
        <div class="container d-flex align-items-center">
            <a href="/">
                            <span class="logo me-auto">V2rayC</span>
                        </a>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section id="breadcrumbs" class="breadcrumbs">
            <div class="container">
                <ol>
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li>正文</li>
                </ol>
                <h1>Zookeeper——客户端API的相关方法操作</h1>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Us Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> </h1> <p id="1.%E5%89%8D%E8%A8%80-toc" style="margin-left:0px;"><a href="#1.%E5%89%8D%E8%A8%80" rel="nofollow">1.前言</a></p> <p id="2.%E5%AE%9E%E6%93%8D%E6%AD%A5%E9%AA%A4-toc" style="margin-left:0px;"><a href="#2.%E5%AE%9E%E6%93%8D%E6%AD%A5%E9%AA%A4" rel="nofollow">2.实操步骤</a></p> <p id="2.1%20%E5%88%9B%E5%BB%BAzk%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E5%AE%8C%E6%88%90%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%9A%84%E8%BF%9E%E6%8E%A5-toc" style="margin-left:40px;"><a href="#2.1%20%E5%88%9B%E5%BB%BAzk%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E5%AE%8C%E6%88%90%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%9A%84%E8%BF%9E%E6%8E%A5" rel="nofollow">2.1 创建zk客户端，完成与服务端的连接</a></p> <p id="2.2%20%E5%88%9B%E5%BB%BA%E8%8A%82%E7%82%B9%E4%BF%A1%E6%81%AF-toc" style="margin-left:40px;"><a href="#2.2%20%E5%88%9B%E5%BB%BA%E8%8A%82%E7%82%B9%E4%BF%A1%E6%81%AF" rel="nofollow">2.2 创建节点信息</a></p> <p id="2.3%20%E8%8E%B7%E5%8F%96%E5%AD%90%E7%BB%93%E7%82%B9%E5%B9%B6%E7%9B%91%E5%90%AC%E8%8A%82%E7%82%B9%E5%8F%98%E5%8C%96-toc" style="margin-left:40px;"><a href="#2.3%20%E8%8E%B7%E5%8F%96%E5%AD%90%E7%BB%93%E7%82%B9%E5%B9%B6%E7%9B%91%E5%90%AC%E8%8A%82%E7%82%B9%E5%8F%98%E5%8C%96" rel="nofollow">2.3 获取子结点并监听节点变化</a></p> <p id="2.4%20%E5%88%A4%E6%96%AD%E8%8A%82%E7%82%B9%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8-toc" style="margin-left:40px;"><a href="#2.4%20%E5%88%A4%E6%96%AD%E8%8A%82%E7%82%B9%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8" rel="nofollow">2.4 判断节点是否存在</a></p> <p id="3.%E6%B5%85%E8%B0%88%E5%86%99%E6%95%B0%E6%8D%AE%E5%8E%9F%E7%90%86-toc" style="margin-left:0px;"><a href="#3.%E6%B5%85%E8%B0%88%E5%86%99%E6%95%B0%E6%8D%AE%E5%8E%9F%E7%90%86" rel="nofollow">3.浅谈写数据原理</a></p> <p id="3.1%20%E5%86%99%E6%B5%81%E7%A8%8B%E4%B9%8B%E5%86%99%E5%85%A5%E8%AF%B7%E6%B1%82%E7%9B%B4%E6%8E%A5%E5%8F%91%E9%80%81%E7%BB%99Leader%E8%8A%82%E7%82%B9-toc" style="margin-left:40px;"><a href="#3.1%20%E5%86%99%E6%B5%81%E7%A8%8B%E4%B9%8B%E5%86%99%E5%85%A5%E8%AF%B7%E6%B1%82%E7%9B%B4%E6%8E%A5%E5%8F%91%E9%80%81%E7%BB%99Leader%E8%8A%82%E7%82%B9" rel="nofollow">3.1 写流程之写入请求直接发送给Leader节点</a></p> <p id="3.2%C2%A0%E5%86%99%E6%B5%81%E7%A8%8B%E4%B9%8B%E5%86%99%E5%85%A5%E8%AF%B7%E6%B1%82%E7%9B%B4%E6%8E%A5%E5%8F%91%E9%80%81%E7%BB%99Follower%E8%8A%82%E7%82%B9-toc" style="margin-left:40px;"><a href="#3.2%C2%A0%E5%86%99%E6%B5%81%E7%A8%8B%E4%B9%8B%E5%86%99%E5%85%A5%E8%AF%B7%E6%B1%82%E7%9B%B4%E6%8E%A5%E5%8F%91%E9%80%81%E7%BB%99Follower%E8%8A%82%E7%82%B9" rel="nofollow">3.2&nbsp;写流程之写入请求直接发送给Follower节点</a></p> <hr id="hr-toc"/> </h1> <blockquote> <p>首先，在上一篇博客中，主要是对zookeeper集群的相关操作，那么由于我的笔记本是 8G 内存的，所以开三台Linux还是可以的，但是再开个IDEA了话就炸了，所以我这里针对zookeeper和Java API的操作，就切换成zookeeper单机模式了，也就是只启动一台zookeeper。</p> <p>由于之前配置的是zookeeper集群，现在转为单机版，所以需要把 zoo.cfg 配置文件中关于集群的那些注释掉：????????????</p> </blockquote> <p><img fetchpriority="high" decoding="async" alt="" height="129" src="http://img.555519.xyz/uploads3/20220903/74b02dd7ea3b7924b8ff262c3fc3b892.jpg"></p> <hr/> </h1> <blockquote> <p>首先建一个maven项目，pom文件中添加如下依赖。</p> </blockquote> <pre><code class="language-XML">    &lt;dependencies&gt;         &lt;dependency&gt;             &lt;groupId&gt;junit&lt;/groupId&gt;             &lt;artifactId&gt;junit&lt;/artifactId&gt;             &lt;version&gt;RELEASE&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;             &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;             &lt;version&gt;2.8.2&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;             &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;             &lt;version&gt;3.5.7&lt;/version&gt;         &lt;/dependency&gt;     &lt;/dependencies&gt;</code></pre> <blockquote> <div><span style="color:#000000;">需要在项目的</span><span style="color:#000000;">src/main/resources</span><span style="color:#000000;">目录下，新建一个文件，命名为“</span><span style="color:#000000;">log4j.properties</span><span style="color:#000000;">”，在文件中填入。</span></div> </blockquote> <pre><code class="language-XML">log4j.rootLogger=INFO, stdout  log4j.appender.stdout=org.apache.log4j.ConsoleAppender  log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n  log4j.appender.logfile=org.apache.log4j.FileAppender  log4j.appender.logfile.File=target/spring.log  log4j.appender.logfile.layout=org.apache.log4j.PatternLayout  log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n</code></pre> <h2 id="2.1%20%E5%88%9B%E5%BB%BAzk%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E5%AE%8C%E6%88%90%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%9A%84%E8%BF%9E%E6%8E%A5">2.1 创建zk客户端，完成与服务端的连接</h2> <pre><code class="language-java">package com.szh.zk;  import org.apache.zookeeper.*; import org.apache.zookeeper.data.Stat; import org.junit.Before; import org.junit.Test;  import java.io.IOException; import java.util.List;  /**  *  */ public class ZookeeperClient {      //单机模式     private static String connectString = "192.168.40.130:2181";     //集群模式 //    private static String connectString = "zk101:2181,zk102:2181,zk103:2181";     private static int sessionTimeout = 30000;     private ZooKeeper zkClient = null;      /**      * 创建ZooKeeper客户端，完成服务端与客户端之间的连接      * connectString: 具体连接的那台zookeeper服务器的地址      * sessionTimeout: 客户端和服务端直接连接的超时时限      * watcher: 监听器相关设置      */     @Test     public void init() throws IOException {         zkClient = new ZooKeeper(connectString, sessionTimeout, new Watcher() {             @Override             public void process(WatchedEvent watchedEvent) {              }         });     } }</code></pre> <p><img decoding="async" alt="" height="346" src="http://img.555519.xyz/uploads3/20220903/459c082eb32e201a4f47705caeaf498b.jpg"></p> <h2 id="2.2%20%E5%88%9B%E5%BB%BA%E8%8A%82%E7%82%B9%E4%BF%A1%E6%81%AF">2.2 创建节点信息</h2> <pre><code class="language-java">package com.szh.zk;  import org.apache.zookeeper.*; import org.apache.zookeeper.data.Stat; import org.junit.Before; import org.junit.Test;  import java.io.IOException; import java.util.List;  /**  *  */ public class ZookeeperClient {      //单机模式     private static String connectString = "192.168.40.130:2181";     //集群模式 //    private static String connectString = "zk101:2181,zk102:2181,zk103:2181";     private static int sessionTimeout = 30000;     private ZooKeeper zkClient = null;      /**      * 创建ZooKeeper客户端，完成服务端与客户端之间的连接      * connectString: 具体连接的那台zookeeper服务器的地址      * sessionTimeout: 客户端和服务端直接连接的超时时限      * watcher: 监听器相关设置      */     @Before     public void init2() throws IOException {         zkClient = new ZooKeeper(connectString, sessionTimeout, new Watcher() {             @Override             public void process(WatchedEvent watchedEvent) {              }         });     }      /**      * 创建节点相关信息      * String path: 要在哪个节点路径下创建新的节点      * byte[] data: 节点中存储的具体值      * List&lt;ACL&gt; acl: 权限控制相关内容, OPEN_ACL_UNSAFE表示任何人都可以访问      * CreateMode createMode: 创建节点的类型（永久、短暂等）, PERSISTENT表示永久节点      */     @Test     public void create() throws KeeperException, InterruptedException {         String node = zkClient.create("/szh", "Java开发".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);         System.out.println(node);     } }</code></pre> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/b7796d8aeff987d1c732bbe484a01b2a.jpg"></p> <h2 id="2.3%20%E8%8E%B7%E5%8F%96%E5%AD%90%E7%BB%93%E7%82%B9%E5%B9%B6%E7%9B%91%E5%90%AC%E8%8A%82%E7%82%B9%E5%8F%98%E5%8C%96">2.3 获取子结点并监听节点变化</h2> <pre><code class="language-java">package com.szh.zk;  import org.apache.zookeeper.*; import org.apache.zookeeper.data.Stat; import org.junit.Before; import org.junit.Test;  import java.io.IOException; import java.util.List;  /**  *  */ public class ZookeeperClient {      //单机模式     private static String connectString = "192.168.40.130:2181";     //集群模式 //    private static String connectString = "zk101:2181,zk102:2181,zk103:2181";     private static int sessionTimeout = 30000;     private ZooKeeper zkClient = null;      /**      * 创建ZooKeeper客户端，完成服务端与客户端之间的连接      * connectString: 具体连接的那台zookeeper服务器的地址      * sessionTimeout: 客户端和服务端直接连接的超时时限      * watcher: 监听器相关设置      */     @Before     public void init2() throws IOException {         zkClient = new ZooKeeper(connectString, sessionTimeout, new Watcher() {             @Override             public void process(WatchedEvent watchedEvent) {                 //收到事件通知后的回调函数（用户的业务逻辑）                 System.out.println("-----------------------------------");                 List&lt;String&gt; children = null;                 try {                     children = zkClient.getChildren("/", true);                 } catch (KeeperException | InterruptedException e) {                     e.printStackTrace();                 }                 children.forEach(System.out::println);             }         });     }      /**      * 获取子结点，并监听节点的变化      * String path: 监听哪个路径下的节点      * boolean watch: true表示采用监听器，客户端相关路径下的节点一旦发生变化，监听器就会触发相应的回调方法，再次启动监听      */     @Test     public void getChildren() throws KeeperException, InterruptedException {         List&lt;String&gt; children = zkClient.getChildren("/", true);         children.forEach(System.out::println);         Thread.sleep(Long.MAX_VALUE);     } }</code></pre> <blockquote> <p>基于上面创建节点的API测试之后，此时zk客户端中是存在 szh 这个节点的。</p> </blockquote> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/447eef12b370018386ad829ef1070a77.jpg"></p> <blockquote> <p>下面，我们到 zk客户端命令行中，创建新的节点，看看这里监听如何？</p> </blockquote> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/d4248f93dff4d295e952c05d5ef1589c.jpg"></p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/b7ed5e413e3022ff73fe297bdf353c64.jpg"></p> <blockquote> <p>从上面的运行结果中可以看到，在客户端中实时的创建新的节点是可以被监听到的。</p> <p>下面删除一个节点，这边监听仍然正常执行。</p> </blockquote> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/5f858cc63d278a07b8fed2c3cada8cfa.jpg"></p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/0a1fc7d0e54698e15f1e31b104db25fd.jpg"></p> <h2 id="2.4%20%E5%88%A4%E6%96%AD%E8%8A%82%E7%82%B9%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8">2.4 判断节点是否存在</h2> <pre><code class="language-java">package com.szh.zk;  import org.apache.zookeeper.*; import org.apache.zookeeper.data.Stat; import org.junit.Before; import org.junit.Test;  import java.io.IOException; import java.util.List;  /**  *  */ public class ZookeeperClient {      //单机模式     private static String connectString = "192.168.40.130:2181";     //集群模式 //    private static String connectString = "zk101:2181,zk102:2181,zk103:2181";     private static int sessionTimeout = 30000;     private ZooKeeper zkClient = null;      /**      * 创建ZooKeeper客户端，完成服务端与客户端之间的连接      * connectString: 具体连接的那台zookeeper服务器的地址      * sessionTimeout: 客户端和服务端直接连接的超时时限      * watcher: 监听器相关设置      */     @Test     public void init() throws IOException {         zkClient = new ZooKeeper(connectString, sessionTimeout, new Watcher() {             @Override             public void process(WatchedEvent watchedEvent) {              }         });     }      @Before     public void init2() throws IOException {         zkClient = new ZooKeeper(connectString, sessionTimeout, new Watcher() {             @Override             public void process(WatchedEvent watchedEvent) {              }         });     }      /**      * 判断节点是否存在      * String path: 判断哪个路径下的节点是否存在      * boolean watch: false表示不开启监听器功能      */     @Test     public void exist() throws KeeperException, InterruptedException {         Stat stat = zkClient.exists("/szh", false);         System.out.println(stat != null ? "节点存在" : "节点不存在");     } }</code></pre> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/36605fa15dd3350b6f4f5dffc6ea25f0.jpg"></p> <blockquote> <p>基于上面的API测试，我们知道 szh 这个节点是存在的，所以上面的运行结果是 节点存在。</p> <p>然后将 szh 节点删除，自然就不存在了。</p> </blockquote> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/86a7f61b35ad38625e17dd41180046f2.jpg"></p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220903/13718fbf9ae7e2c9067f663a8813e034.jpg"></p> <hr/> </h1> <h2 id="3.1%20%E5%86%99%E6%B5%81%E7%A8%8B%E4%B9%8B%E5%86%99%E5%85%A5%E8%AF%B7%E6%B1%82%E7%9B%B4%E6%8E%A5%E5%8F%91%E9%80%81%E7%BB%99Leader%E8%8A%82%E7%82%B9">3.1 写流程之写入请求直接发送给Leader节点</h2> <p><img decoding="async" alt="" height="428" src="http://img.555519.xyz/uploads3/20220903/9f4e757bbbd870b119d73d8f754cd0af.jpg"></p> <h2 id="3.2%C2%A0%E5%86%99%E6%B5%81%E7%A8%8B%E4%B9%8B%E5%86%99%E5%85%A5%E8%AF%B7%E6%B1%82%E7%9B%B4%E6%8E%A5%E5%8F%91%E9%80%81%E7%BB%99Follower%E8%8A%82%E7%82%B9">3.2&nbsp;写流程之写入请求直接发送给Follower节点</h2> <p><img loading="lazy" decoding="async" alt="" height="402" src="http://img.555519.xyz/uploads3/20220903/b8476c252cd8c83914f729220a49854e.jpg"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-63735.htm">动态矩阵（指针与堆内存分配）</a></p>
                                        <p>下一个：<a href="/news/article-64368.htm">宠物粮行业分析报告怎么写的好（宠物粮行业环境分析）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-61946.htm" title="宠物店寄养会有什么风险（宠物店寄养一般怎么收费）">宠物店寄养会有什么风险（宠物店寄养一般怎么收费）</a></li>
                        <li class="py-2"><a href="/news/article-43272.htm" title="喵汪清宠驱虫药两个月小狗能用吗（喵汪清宠驱虫药两个月小狗能用吗）">喵汪清宠驱虫药两个月小狗能用吗（喵汪清宠驱虫药两个月小狗能用吗）</a></li>
                        <li class="py-2"><a href="/news/article-33497.htm" title="动物医学实验报告（动物医学实验报告范文）">动物医学实验报告（动物医学实验报告范文）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-30-free-high-speed-nodes.htm" title="11月30日→18.9M/S|2024年最新免费节点V2rayC订阅链接地址">11月30日→18.9M/S|2024年最新免费节点V2rayC订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-12-node-share-links.htm" title="2月12日→20.7M/S|免费节点Clash/SSR/V2rayC订阅链接地址分享">2月12日→20.7M/S|免费节点Clash/SSR/V2rayC订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-25-free-node-subscribe-links.htm" title="12月25日→20.8M/S|2024年最新免费节点V2rayC订阅链接地址分享">12月25日→20.8M/S|2024年最新免费节点V2rayC订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-19066.htm" title="动物疫苗上市企业名单（动物疫苗上市a股龙头）">动物疫苗上市企业名单（动物疫苗上市a股龙头）</a></li>
                        <li class="py-2"><a href="/news/article-42778.htm" title="长春市宠物猫领养中心电话（长春宠物领养长春宠物赠送）">长春市宠物猫领养中心电话（长春宠物领养长春宠物赠送）</a></li>
                        <li class="py-2"><a href="/news/article-30650.htm" title="猫三联加狂犬疫苗要打多久才有效（猫三联加狂犬疫苗多少钱）">猫三联加狂犬疫苗要打多久才有效（猫三联加狂犬疫苗多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-51837.htm" title="广州宠物领养网免费领养猫咪的地方（广州宠物猫领养中心）">广州宠物领养网免费领养猫咪的地方（广州宠物猫领养中心）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">13</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Us Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container footer-bottom clearfix">
            <div class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                <a href="/">V2rayC免费节点分享中文站</a> 版权所有 Powered by WordPress
            </div>
            <div class="credits"></div>
        </div>
    </footer><!-- End Footer -->
    <div id="preloader"></div>
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/v2rayc/jquery-2.1.0.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayc/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/v2rayc/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayc/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayc/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayc/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/v2rayc/swiper/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayc/waypoints/noframework.waypoints.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/v2rayc/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>

</body>

</html>